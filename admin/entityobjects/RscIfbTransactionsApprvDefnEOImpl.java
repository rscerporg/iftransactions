package oracle.apps.po.rscapps.oss.iftransactions.admin.entityobjects;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class RscIfbTransactionsApprvDefnEOImpl extends OAEntityImpl 
{
  protected static final int APPROVALREQUESTOR = 0;
  protected static final int APPROVALREQUESTORPARTYID = 1;
  protected static final int APPROVALPROVIDER = 2;
  protected static final int APPROVALPROVIDERPARTYID = 3;
  protected static final int CREATEDBY = 4;
  protected static final int LASTUPDATELOGIN = 5;
  protected static final int LASTUPDATEDBY = 6;
  protected static final int CREATIONDATE = 7;
  protected static final int LASTUPDATEDATE = 8;

  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public RscIfbTransactionsApprvDefnEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("oracle.apps.po.rscapps.oss.iftransactions.admin.entityobjects.RscIfbTransactionsApprvDefnEO");
    }
    return mDefinitionObject;
  }


  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**
   * 
   * Gets the attribute value for ApprovalRequestor, using the alias name ApprovalRequestor
   */
  public String getApprovalRequestor()
  {
    return (String)getAttributeInternal(APPROVALREQUESTOR);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApprovalRequestor
   */
  public void setApprovalRequestor(String value)
  {
    setAttributeInternal(APPROVALREQUESTOR, value);
  }

  /**
   * 
   * Gets the attribute value for ApprovalRequestorPartyId, using the alias name ApprovalRequestorPartyId
   */
  public Number getApprovalRequestorPartyId()
  {
    return (Number)getAttributeInternal(APPROVALREQUESTORPARTYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApprovalRequestorPartyId
   */
  public void setApprovalRequestorPartyId(Number value)
  {
    setAttributeInternal(APPROVALREQUESTORPARTYID, value);
  }

  /**
   * 
   * Gets the attribute value for ApprovalProvider, using the alias name ApprovalProvider
   */
  public String getApprovalProvider()
  {
    return (String)getAttributeInternal(APPROVALPROVIDER);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApprovalProvider
   */
  public void setApprovalProvider(String value)
  {
    setAttributeInternal(APPROVALPROVIDER, value);
  }

  /**
   * 
   * Gets the attribute value for ApprovalProviderPartyId, using the alias name ApprovalProviderPartyId
   */
  public Number getApprovalProviderPartyId()
  {
    return (Number)getAttributeInternal(APPROVALPROVIDERPARTYID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ApprovalProviderPartyId
   */
  public void setApprovalProviderPartyId(Number value)
  {
    setAttributeInternal(APPROVALPROVIDERPARTYID, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case APPROVALREQUESTOR:
        return getApprovalRequestor();
      case APPROVALREQUESTORPARTYID:
        return getApprovalRequestorPartyId();
      case APPROVALPROVIDER:
        return getApprovalProvider();
      case APPROVALPROVIDERPARTYID:
        return getApprovalProviderPartyId();
      case CREATEDBY:
        return getCreatedBy();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case APPROVALREQUESTOR:
        setApprovalRequestor((String)value);
        return;
      case APPROVALREQUESTORPARTYID:
        setApprovalRequestorPartyId((Number)value);
        return;
      case APPROVALPROVIDER:
        setApprovalProvider((String)value);
        return;
      case APPROVALPROVIDERPARTYID:
        setApprovalProviderPartyId((Number)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String approvalRequestor)
  {
    return new Key(new Object[] {approvalRequestor});
  }


}